{"ast":null,"code":"import axios from 'axios'; // Import Axios for making HTTP requests\nimport GiphyService from 'https://localhost:7157/services/GiphyService'; // Import the GiphyService\n\nexport default {\n  data() {\n    return {\n      query: '',\n      // To store the user's search query\n      loading: false,\n      // To indicate whether the search is in progress\n      error: null,\n      // To store any error message\n      gifs: [] // To store the GIF data received from the backend\n    };\n  },\n  methods: {\n    async search() {\n      this.loading = true; // Set loading to true when search begins\n      this.error = null; // Reset error message\n      try {\n        // Send a GET request to search GIFs\n        const response = await GiphyService.searchGifsAsync(this.query); // Corrected method call\n\n        // Update the GIFs data with the search results\n        this.gifs = response.data.data; // Access data property of response\n      } catch (error) {\n        // Handle specific errors\n        console.error('Error:', error);\n        this.error = 'An error occurred while fetching GIFs. Please try again later.';\n      } finally {\n        this.loading = false; // Set loading to false when search is complete (success or error)\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","GiphyService","data","query","loading","error","gifs","methods","search","response","searchGifsAsync","console"],"sources":["C:\\Users\\Victor\\source\\repos\\jvrios\\Frontend\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"text\" v-model=\"query\" placeholder=\"Search GIFs...\">\n    <button @click=\"search\">Search</button>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-if=\"error\">{{ error }}</div>\n    <div v-if=\"gifs.length > 0\">\n      <h2>Search Results</h2>\n      <div class=\"gif-item\" v-for=\"gif in gifs\" :key=\"gif.id\">\n        <img :src=\"gif.images.original.url\" :alt=\"gif.title\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Import Axios for making HTTP requests\nimport GiphyService from 'https://localhost:7157/services/GiphyService'; // Import the GiphyService\n\nexport default {\n  data() {\n    return {\n      query: '', // To store the user's search query\n      loading: false, // To indicate whether the search is in progress\n      error: null, // To store any error message\n      gifs: [], // To store the GIF data received from the backend\n    };\n  },\n  methods: {\n    async search() {\n      this.loading = true; // Set loading to true when search begins\n      this.error = null; // Reset error message\n      try {\n        // Send a GET request to search GIFs\n        const response = await GiphyService.searchGifsAsync(this.query); // Corrected method call\n        \n        // Update the GIFs data with the search results\n        this.gifs = response.data.data; // Access data property of response\n      } catch (error) {\n        // Handle specific errors\n        console.error('Error:', error);\n        this.error = 'An error occurred while fetching GIFs. Please try again later.';\n      } finally {\n        this.loading = false; // Set loading to false when search is complete (success or error)\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add any CSS styles specific to this component */\n.gif-item {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"AAgBA,OAAOA,KAAI,MAAO,OAAO,EAAE;AAC3B,OAAOC,YAAW,MAAO,8CAA8C,EAAE;;AAEzE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MAAE;MACXC,OAAO,EAAE,KAAK;MAAE;MAChBC,KAAK,EAAE,IAAI;MAAE;MACbC,IAAI,EAAE,EAAE,CAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,CAACJ,OAAM,GAAI,IAAI,EAAE;MACrB,IAAI,CAACC,KAAI,GAAI,IAAI,EAAE;MACnB,IAAI;QACF;QACA,MAAMI,QAAO,GAAI,MAAMR,YAAY,CAACS,eAAe,CAAC,IAAI,CAACP,KAAK,CAAC,EAAE;;QAEjE;QACA,IAAI,CAACG,IAAG,GAAIG,QAAQ,CAACP,IAAI,CAACA,IAAI,EAAE;MAClC,EAAE,OAAOG,KAAK,EAAE;QACd;QACAM,OAAO,CAACN,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,IAAI,CAACA,KAAI,GAAI,gEAAgE;MAC/E,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK,EAAE;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}